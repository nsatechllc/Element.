[package]
name = "remote-se"
version = "0.1.0"
edition = "2021"

[features]
# Option 1: software signer over HTTP (default)
software = ["dep:tokio", "dep:oqs"]
# Option 2: QUIC overlay using exporter-based CBID (adds QUIC server in parallel to HTTP)
quic-overlay = ["software", "dep:quinn"]
# Option 3: internal crypto-pqc backend (placeholder, add dependency when available)
# crypto-pqc-backend = ["dep:crypto-pqc", "dep:tokio"]
# Option 4: experimental native PQC TLS (placeholder)
quic-native = []

default = ["software"]

[dependencies]
anyhow = { workspace = true }
thiserror = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
base64 = { workspace = true }
sha3 = { workspace = true }
hex = { workspace = true }
dashmap = { workspace = true }
parking_lot = { workspace = true }
prometheus = { workspace = true }
once_cell = { workspace = true }
rand = { workspace = true }
zeroize = "1.7"
axum = { version = "0.7", features = ["json"] }
tokio = { version = "1", features = ["rt-multi-thread", "macros"], optional = true }
quinn = { version = "0.10", optional = true }
oqs = { version = "0.9.0", optional = true }
# crypto-pqc backend placeholder (add path when crate is vendored)
# crypto-pqc = { path = "../crates/crypto-pqc", optional = true }
tokio-util = { version = "0.7", optional = true }

[dev-dependencies]
serde_json = { workspace = true }
reqwest = { version = "0.12", features = ["json"] }
hyper = { version = "0.14", features = ["client"] }
tokio = { version = "1", features = ["rt-multi-thread", "macros"] }
